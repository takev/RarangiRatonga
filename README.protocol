

Messages
========

Welcome message
---------------
Once a connection is opened to the catalogue server, the catalogue server will send a WELCOME
message giving its name, the name of the cluster and the name of the environment.

If the client does not like the environment it should disconnect immediately, report it to
a log file and not try to reconnect automatically.

Peer message
------------
The peer message is send by the catalogue server that is connecting to its neighbour. After this message
the catalogue will switch to TLS communication and certificates on both side of the connection are checked
against a common CA. If the CA check fails the communication is broken and the failure is logged.

After a peer message both sides will start to transfer the database, unless the peers were already reachable
to each other via an existing connection.

NOTE: in debug mode the peer message does not cause the connection to continue work in TLS..

Add/Delete link message
-----------------------
Link messages are send when two catalogues are being connected or disconnected. The two catalogue names
in the message are unordered. Internally the catalogue server must see both possible orders as the same.
A link message is propagated to the other peers only when the message is newer; based on the time stamp.

Internally delete-messages need to be stored so that it will not be propagated twice. Delete messages may
be removed from the internal list after 60 minutes.

Add/Delete service message
--------------------------


Register service message
------------------------
A service can register itself on the catalogue server. This message may only be send on a UNIX domain
socket, the server will use getpeereid() to check if the connecting process is allowed to register the
service.

NOTE: in debug mode the register message may be used on a TCP/IP connection without uid authentication.

Subscribe service message
-------------------------
A client can subscribe for real-time update for service locations. Searching for services is done
through regular expressions matching the URI of a service. Add/Delete messages will be forwarded
to the client which match the regular expression.




